# generated by datamodel-codegen:
#   filename:  4.0A_35_57.json
#   timestamp: 2023-03-30T01:07:09+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Results(BaseModel):
    counts_list: List[int]
    times_list: List[float]
    direction_array: List
    voltage_list: List[float]


class IntegrationResult(BaseModel):
    state: str
    name: str
    counts: int
    delta_time: float
    coincidences: int
    singles_rate_1: float
    singles_rate_2: float
    coincidence_rate: float


class Result1(BaseModel):
    expected_amps: float
    voltage_sent: float


class Result(BaseModel):
    name: str
    Channel_Request: Optional[str] = Field(None, alias='Channel Request')
    voltage: Optional[float] = None
    time_waited: Optional[float] = None
    results: Optional[Results] = None
    integration_results: Optional[List[IntegrationResult]] = None
    result: Optional[Result1] = None
    counts: Optional[int] = None
    delta_time: Optional[float] = None
    coincidences: Optional[int] = None
    singles_rate_1: Optional[float] = None
    singles_rate_2: Optional[float] = None
    coincidence_rate: Optional[float] = None
    new_store: Optional[str] = Field(None, alias='new store')


class Model(BaseModel):
    state: str
    name: str
    results: List[Result]
